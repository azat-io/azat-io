---
interface Props {
  size?: 'm' | 'l'
  class?: string
  id: string
}

let { class: className, size = 'm', id } = Astro.props

let logos = Object.fromEntries(
  Object.entries(
    import.meta.glob('../../content/projects/**/**', { as: 'raw' }),
  )
    .filter(([key]) => key.includes('assets/logo'))
    .map(([path, getLogo]) => [
      path
        .replace('../../content/projects/', '')
        .replace('/assets/logo', '')
        .replace(/\.svg$/, ''),
      getLogo,
    ]),
)

let logo = logos[id]?.()
---

{
  logo && (
    <div class:list={['logo', `size-${size}`, className]}>
      <Fragment set:html={logo} />
    </div>
  )
}

<style>
  .logo {
    display: flex;
    place-items: center;

    :global(svg) {
      color: var(--color-content-primary);
    }
  }

  .size-m :global(svg) {
    inline-size: 80px;
    block-size: 80px;
  }

  .size-l :global(svg) {
    inline-size: 112px;
    block-size: 112px;
  }
</style>

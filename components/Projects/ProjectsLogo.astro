---
import { getLocaleFromUrl } from '~/utils/get-locale-from-url'
import { useTranslations } from '~/utils/use-translations'

interface Props {
  itemprop?: string
  size?: 'm' | 'l'
  class?: string
  title: string
  id: string
}

let { class: className, size = 'm', title, id, ...props } = Astro.props

let locale = getLocaleFromUrl(Astro.url)
let t = useTranslations(locale, 'projects')

let logos = Object.fromEntries(
  Object.entries(
    import.meta.glob('../../content/projects/**/**', {
      import: 'default',
      query: '?raw',
    }),
  )
    .filter(([key]) => key.includes('assets/logo'))
    .map(([path, getLogo]) => [
      path
        .replace('../../content/projects/', '')
        .replace('/assets/logo', '')
        .replace(/\.svg$/, ''),
      getLogo,
    ]),
)

let logo = logos[id]?.()
---

{
  logo && (
    <div
      class:list={['logo', `size-${size}`, className]}
      aria-label={`${t('logo-of')} ${title}`}
      {...props}
    >
      <Fragment set:html={logo} />
    </div>
  )
}

<style>
  .logo {
    display: flex;
    place-items: center;

    :global(svg) {
      inline-size: var(--size);
      block-size: var(--size);
      color: var(--color-content-primary);

      @media print {
        color: var(--color-content-print);
      }
    }
  }

  .size-m {
    --size: 80px;
  }

  .size-l {
    --size: 112px;
  }
</style>

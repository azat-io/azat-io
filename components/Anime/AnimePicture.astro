---
import { Picture } from 'astro:assets'

import { getLocaleFromUrl } from '~/utils/get-locale-from-url'
import { useTranslations } from '~/utils/use-translations'

interface Props {
  name: string
  id: string
}

let { name, id } = Astro.props

let locale = getLocaleFromUrl(Astro.url)
let t = useTranslations(locale, 'anime')

let images = import.meta.glob('../../assets/anime/*')
images = Object.fromEntries(
  Object.entries(images).map(([key, value]) => [
    key.replace('../../assets/anime/', '').replace(/\.png$/, ''),
    value,
  ]),
)
---

<Picture
  src={images[id]!() as unknown as ImageMetadata}
  alt={`${t('cover-for')} ${name}`}
  formats={['avif', 'webp']}
  decoding="async"
  loading="lazy"
  class="image"
  height="630"
  width="460"
/>

<style>
  .image {
    --origin-image-width: 460px;
    --origin-image-height: 630px;
    --origin-image-coefficient: clamp(0.3, 0.15 + 0.1875, 0.375);
    --inline-size: calc(
      var(--origin-image-width) * var(--origin-image-coefficient)
    );
    --block-size: calc(
      var(--origin-image-height) * var(--origin-image-coefficient)
    );

    inline-size: var(--inline-size);
    block-size: var(--block-height);
    user-select: none;
    filter: sepia(0.6) saturate(2);
  }
</style>

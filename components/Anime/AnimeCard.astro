---
import AnimePicture from '~/components/Anime/AnimePicture.astro'
import { getLocaleFromUrl } from '~/utils/get-locale-from-url'
import AnimeRating from '~/components/Anime/AnimeRating.astro'
import { useTranslations } from '~/utils/use-translations'
import Typography from '~/components/Typography.astro'

type Genre =
  | 'psychological'
  | 'slice-of-life'
  | 'supernatural'
  | 'adventure'
  | 'thriller'
  | 'fantasy'
  | 'mystery'
  | 'romance'
  | 'comedy'
  | 'action'
  | 'sci-fi'
  | 'horror'
  | 'drama'
  | 'mecha'
  | 'music'
  | 'ecchi'

interface Props {
  originName: string
  duration: number
  episodes: number
  genres: Genre[]
  lazy?: boolean
  score: number
  name: string
  year: number
  id: string
}

let { originName, duration, episodes, genres, score, name, year, lazy, id } =
  Astro.props

let locale = getLocaleFromUrl(Astro.url)
let t = useTranslations(locale, 'anime')

let formattedGenres = genres.map(genre => t(genre)).join(', ')
let timeConvert = (totalMinutes: number): string => {
  let hours = totalMinutes / 60
  let roundedHours = Math.floor(hours)
  let minutes = (hours - roundedHours) * 60
  let roundedMinutes = Math.round(minutes)
  return (
    (roundedHours > 0 ? `${roundedHours} ${t('hours')} ` : '') +
    (roundedMinutes > 0 ? `${roundedMinutes} ${t('minutes')}` : '')
  )
}
let durationTime =
  episodes === 1
    ? timeConvert(duration)
    : `${episodes} ${t('episodes-of')} ${timeConvert(duration)}`
---

<li class="card">
  <AnimePicture {name} {lazy} {id} />
  <div class="data">
    <div class="info">
      <Typography color="brand" size="s" noWrap>
        {name}
      </Typography>
      <Typography color="secondary" size="xs" mbe="xs" noWrap>
        {originName}
      </Typography>
      <Typography color="primary" size="xs">
        {`${t('genres')}: ${formattedGenres}`}
      </Typography>
      <Typography color="primary" size="xs">
        {`${t('duration')}: ${durationTime}`}
      </Typography>
      <Typography color="primary" size="xs">
        {`${t('year')}: ${year}`}
      </Typography>
    </div>
    <AnimeRating {score} />
  </div>
</li>

<style>
  .card {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: var(--space-m);
    margin-block: 0;
  }

  .data {
    display: flex;
    flex-direction: column;
    place-content: space-between;
    block-size: 100%;
  }

  .info {
    display: grid;
    gap: 0;
  }
</style>

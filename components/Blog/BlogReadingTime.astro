---
import readingTime from 'reading-time'

import { getLocaleFromUrl } from '~/utils/get-locale-from-url'
import { useTranslations } from '~/utils/use-translations'
import Typography from '~/components/Typography.astro'
import CoffeeIcon from '~/icons/coffee.svg?raw'

interface Props {
  itemprop?: string
  body: string
}

let { body, ...props } = Astro.props

let locale = getLocaleFromUrl(Astro.url)
let t = useTranslations(locale, 'blog')

let time = Math.ceil(readingTime(body).minutes)
let coffeeCups = Math.ceil(time / 5)
---

<Typography class="text" tag="span" size="2xs" {...props}>
  {
    Array.from({ length: coffeeCups }).map(() => (
      <Fragment set:html={CoffeeIcon} />
    ))
  }
  {
    `${time} ${
      (
        t('minutes-to-read') as {
          [key in Intl.LDMLPluralRule]: string
        }
      )[new Intl.PluralRules(locale).select(time)]
    }`
  }
</Typography>

<style>
  .text {
    display: flex;
    gap: var(--space-2xs);
    place-items: end;
    line-height: 1 !important;

    :global(svg) {
      display: flex;
      block-size: 1.25lh;
    }
  }
</style>

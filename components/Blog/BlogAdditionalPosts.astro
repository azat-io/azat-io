---
import BlogWidgetWrapper from '~/components/Blog/BlogWidgetWrapper.astro'
import { getLocaleFromUrl } from '~/utils/get-locale-from-url'
import { useTranslations } from '~/utils/use-translations'
import ArrowRightIcon from '~/icons/arrow-right.svg?raw'
import ArrowLeftIcon from '~/icons/arrow-left.svg?raw'
import Typography from '~/components/Typography.astro'
import { getPosts } from '~/utils/get-posts'

interface Props {
  slug: string
}

let { slug } = Astro.props

let locale = getLocaleFromUrl(Astro.url)
let t = useTranslations(locale, 'blog')

let parseUrl = (url: string) => {
  let [slugValue, localeValue] = url.replace(/\.mdx?$/, '').split('/')
  return { locale: localeValue!, slug: slugValue! }
}

let posts = await getPosts(locale)
let indexOfCurrentPost = posts.findIndex(post => {
  let { locale: localeValue, slug: slugValue } = parseUrl(slug)
  return `${locale}/${post.slug}` === `${localeValue}/${slugValue}`
})
let isFirstPost = indexOfCurrentPost === posts.length - 1
let isLastPost = indexOfCurrentPost === 0
let previousPost = isFirstPost ? null : posts.at(indexOfCurrentPost + 1)
let nextPost = isLastPost ? null : posts.at(indexOfCurrentPost - 1)
---

{
  locale === parseUrl(slug).locale && (
    <BlogWidgetWrapper>
      <>
        {!isFirstPost ? (
          <div class="post-previous">
            <a
              href={`/${locale}/blog/${previousPost?.slug}`}
              class="link link-previous"
            >
              <Fragment set:html={ArrowLeftIcon} />
              <div>
                <Typography color="primary" size="s">
                  {t('previous-post')}
                </Typography>
                <Typography color="inherit">
                  {previousPost?.data.title}
                </Typography>
              </div>
            </a>
          </div>
        ) : (
          <div />
        )}
      </>
      {!isLastPost && (
        <div class="post-next">
          <a href={`/${locale}/blog/${nextPost?.slug}`} class="link link-next">
            <div>
              <Typography color="primary" size="s">
                {t('next-post')}
              </Typography>
              <Typography color="inherit">{nextPost?.data.title}</Typography>
            </div>
            <Fragment set:html={ArrowRightIcon} />
          </a>
        </div>
      )}
    </BlogWidgetWrapper>
  )
}

<style>
  .link {
    display: inline-flex;
    gap: var(--space-s);
    place-items: center;
    padding-inline: 0;
    text-decoration: none;
    border-radius: var(--border-radius);

    :global(svg) {
      inline-size: var(--size-icon-s);
      block-size: var(--size-icon-s);
    }

    @container (inline-size >= 560px) {
      flex-direction: row;
    }
  }

  .link-previous {
    text-align: start;
  }

  .link-next {
    flex-direction: row-reverse;

    @container (inline-size >= 560px) {
      flex-direction: row;
    }
  }

  .post-previous {
    display: flex;
  }

  .post-next {
    display: flex;

    @container (inline-size >= 560px) {
      place-content: end;
      text-align: end;
    }
  }
</style>

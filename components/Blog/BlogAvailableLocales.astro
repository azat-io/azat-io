---
import BlogLocaleLink from '~/components/Blog/BlogLocaleLink.astro'
import { getLocaleFromUrl } from '~/utils/get-locale-from-url'
import { useTranslations } from '~/utils/use-translations'
import Typography from '~/components/Typography.astro'

interface Props {
  translations: {
    locale: string
    slug: string
  }[]
}

let { translations } = Astro.props

let locale = getLocaleFromUrl(Astro.url)
let t = useTranslations(locale, 'blog')
---

{
  translations.length ? (
    <div class="available-languages">
      <Typography size="xs">{t('also-translated')}</Typography>
      <div class="list">
        {translations.map(post => (
          <BlogLocaleLink {...post} />
        ))}
      </div>
    </div>
  ) : null
}

<style>
  .available-languages {
    display: flex;
    flex-direction: column;
    gap: var(--space-s);
    padding: var(--space-m);
    margin-block: var(--space-m);
    background: var(--color-background-secondary);
    border: 1px solid var(--color-border-primary);
    border-radius: var(--border-radius);
  }

  .list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-s);
  }

  @media (width >= 768px) {
    .available-languages {
      flex-direction: row;
    }
  }
</style>

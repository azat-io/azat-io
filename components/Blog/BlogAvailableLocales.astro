---
import BlogLocaleLink from '~/components/Blog/BlogLocaleLink.astro'
import { getLocaleFromUrl } from '~/utils/get-locale-from-url'
import { useTranslations } from '~/utils/use-translations'
import Typography from '~/components/Typography.astro'

interface Props {
  translations: {
    locale: string
    slug: string
  }[]
}

let { translations } = Astro.props

let locale = getLocaleFromUrl(Astro.url)
let t = useTranslations(locale, 'blog')
---

{
  translations.length > 0 ? (
    <div class="available-languages">
      <Typography tag="span" size="xs">
        {t('also-translated')}
      </Typography>
      <ul class="list">
        {translations.map(post => (
          <li
            itemtype="https://schema.org/Language"
            itemprop="availableLanguage"
            class="item"
            itemscope
          >
            <BlogLocaleLink {...post} />
          </li>
        ))}
      </ul>
    </div>
  ) : null
}

<style>
  .available-languages {
    display: flex;
    flex-direction: column;
    gap: var(--space-s);
    padding: var(--space-m);
    margin-block: var(--space-m);
    background: var(--color-background-secondary);
    border: 1px solid var(--color-border-primary);
    border-radius: var(--border-radius);

    @container (inline-size >= 560px) {
      flex-direction: row;
    }

    @media print {
      display: none;
    }
  }

  .list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-s);
    padding-inline-start: 0;
    margin-block: 0;
    list-style: none;
  }

  .item {
    display: flex;
    margin-block: 0;
  }
</style>

---
import { getLocaleFromUrl } from '~/utils/get-locale-from-url'
import { useTranslations } from '~/utils/use-translations'
import LinkedinIcon from '~/icons/linkedin.svg?raw'
import XIcon from '~/icons/x.svg?raw'

interface Props {
  description: string
  title: string
}

let { description, title } = Astro.props
let { url } = Astro

let locale = getLocaleFromUrl(url)
let t = useTranslations(locale, 'blog')
let e = encodeURI

let cleanUrl = url.toString().replace(/\.html$/, '')
let xUsername = locale === 'ru' ? 'azat_io' : 'azat_io_en'
let linkedinShareUrl = `https://linkedin.com/sharing/share-offsite/?url=${cleanUrl}`
let xShareUrl = `https://twitter.com/intent/tweet?text=${e(
  `${title}\n\n${t('quote-start')}${description}${t('quote-end')} ${t(
    'by',
  )} @${xUsername}\n\n`,
)}&url=${cleanUrl}`
---

<div class="share">
  <a
    aria-label={t('share-on-linkedin') as string}
    href={linkedinShareUrl}
    target="_blank"
    rel="noopener"
    class="link"
  >
    <Fragment set:html={LinkedinIcon} />
  </a>
  <a
    aria-label={t('share-on-x') as string}
    href={xShareUrl}
    target="_blank"
    rel="noopener"
    class="link"
  >
    <Fragment set:html={XIcon} />
  </a>
</div>

<style>
  .share {
    display: flex;
    gap: var(--space-2xs);
  }

  .link {
    display: inline-flex;
    color: var(--color-content-primary);
    border-block-end: none;
    border-radius: var(--border-radius);
  }

  .link:hover {
    color: var(--color-content-link);
  }

  .link :global(svg) {
    inline-size: 20px;
    block-size: 20px;
  }

  .text {
    display: none;
  }
</style>

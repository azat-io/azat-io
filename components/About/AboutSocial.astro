---
import Typography from '~/components/Typography.astro'
import InstagramIcon from '~/icons/instagram.svg?raw'
import LinkedinIcon from '~/icons/linkedin.svg?raw'
import TelegramIcon from '~/icons/telegram.svg?raw'
import MastodonIcon from '~/icons/mastodon.svg?raw'
import EnvelopeIcon from '~/icons/envelope.svg?raw'
import DiscordIcon from '~/icons/discord.svg?raw'
import SpotifyIcon from '~/icons/spotify.svg?raw'
import BlueSkyIcon from '~/icons/bluesky.svg?raw'
import GithubIcon from '~/icons/github.svg?raw'
import XIcon from '~/icons/x.svg?raw'

type Type =
  | 'instagram'
  | 'linkedin'
  | 'telegram'
  | 'mastodon'
  | 'spotify'
  | 'discord'
  | 'bluesky'
  | 'github'
  | 'email'
  | 'x'

interface Props {
  username: string
  link: string
  name: string
  type: Type
}

let { username, name, link, type, ...props } = Astro.props

let Icon: {
  [key in Type]: string
} = {
  instagram: InstagramIcon,
  linkedin: LinkedinIcon,
  telegram: TelegramIcon,
  mastodon: MastodonIcon,
  spotify: SpotifyIcon,
  discord: DiscordIcon,
  bluesky: BlueSkyIcon,
  email: EnvelopeIcon,
  github: GithubIcon,
  x: XIcon,
}
---

<a
  itemtype="https://schema.org/Person"
  rel="noopener noreferrer"
  target="_blank"
  itemprop="url"
  class="social"
  href={link}
  itemscope
  {...props}
>
  <Fragment set:html={Icon[type]} />
  <div>
    <Typography color="brand" class="text" size="m">{name}</Typography>
    <Typography color="secondary" class="text" size="xs">{username}</Typography>
  </div>
</a>

<style>
  .social {
    display: inline-flex;
    gap: var(--space-s);
    place-items: center;
    padding-block: var(--space-s);
    text-decoration: none;
    border-radius: var(--border-radius);
    transition: all 250ms;
    will-change: box-shadow, background, color;

    :global(svg) {
      inline-size: 42px;
      block-size: 42px;
      color: var(--color-content-brand);
    }

    @media (hover: hover) {
      &:hover {
        color: var(--color-content-brand);
        background: var(--color-background-primary-hover);
      }
    }

    &:focus-visible {
      transition-property: box-shadow;
    }
  }

  .text {
    line-height: 1.35 !important;
  }
</style>
